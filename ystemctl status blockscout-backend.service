Aug 30 08:32:22 srv978203 blockscout-backend[579098]: {"time":"2025-08-30T08:32:22.712Z","severity":"info","message":"Start sanitizing of empty blocks. Batch size is 10","metadata":{"fetcher":"empty_blocks_to_refetch"}}
Aug 30 08:32:24 srv978203 blockscout-backend[579098]: {"time":"2025-08-30T08:32:24.060Z","severity":"info","message":"Index already caught up.","metadata":{"fetcher":"block_catchup","first_block_number":null,"last_block_number":null,"missing_block_count":0,"shrunk":false}}
Aug 30 08:32:24 srv978203 blockscout-backend[579098]: {"time":"2025-08-30T08:32:24.060Z","severity":"info","message":"Checking if index needs to catch up in 10000ms.","metadata":{"fetcher":"block_catchup"}}
Aug 30 08:32:28 srv978203 blockscout-backend[579098]: {"time":"2025-08-30T08:32:28.294Z","severity":"info","message":"Sent 200 in 34ms on GET /api/v2/advanced-filters?token_contract_address_hashes_to_include=0x17D6592A6B27564F3D0810D79405D366a4aC69e5&token_contract_symbols_to_include=WPAX&to_address_hashes_to_include=0xe7Ca1BbfAb347ee3Fa4870856f0d0d8761BC2987&from_address_hashes_to_include=0xe7Ca1BbfAb347ee3Fa4870856f0d0d8761BC2987","metadata":{"status":"200","unit":"microsecond","request_id":"GGB-Uq7MUpc5CUYAAghI","duration":34680,"endpoint":"/api/v2/advanced-filters?token_contract_address_hashes_to_include=0x17D6592A6B27564F3D0810D79405D366a4aC69e5&token_contract_symbols_to_include=WPAX&to_address_hashes_to_include=0xe7Ca1BbfAb347ee3Fa4870856f0d0d8761BC2987&from_address_hashes_to_include=0xe7Ca1BbfAb347ee3Fa4870856f0d0d8761BC2987","method":"GET"}}
Aug 30 08:32:32 srv978203 blockscout-backend[579098]: {"time":"2025-08-30T08:32:32.734Z","severity":"info","message":"Start sanitizing of empty blocks. Batch size is 10","metadata":{"fetcher":"empty_blocks_to_refetch"}}
Aug 30 08:32:34 srv978203 blockscout-backend[579098]: {"time":"2025-08-30T08:32:34.062Z","severity":"info","message":"Index already caught up.","metadata":{"fetcher":"block_catchup","first_block_number":null,"last_block_number":null,"missing_block_count":0,"shrunk":false}}
Aug 30 08:32:34 srv978203 blockscout-backend[579098]: {"time":"2025-08-30T08:32:34.062Z","severity":"info","message":"Checking if index needs to catch up in 10000ms.","metadata":{"fetcher":"block_catchup"}}
Aug 30 08:32:42 srv978203 blockscout-backend[579098]: {"time":"2025-08-30T08:32:42.757Z","severity":"info","message":"Start sanitizing of empty blocks. Batch size is 10","metadata":{"fetcher":"empty_blocks_to_refetch"}}
Aug 30 08:32:44 srv978203 blockscout-backend[579098]: {"time":"2025-08-30T08:32:44.065Z","severity":"info","message":"Index already caught up.","metadata":{"fetcher":"block_catchup","first_block_number":null,"last_block_number":null,"missing_block_count":0,"shrunk":false}}
Aug 30 08:32:44 srv978203 blockscout-backend[579098]: {"time":"2025-08-30T08:32:44.065Z","severity":"info","message":"Checking if index needs to catch up in 10000ms.","metadata":{"fetcher":"block_catchup"}}
Aug 30 08:32:51 srv978203 blockscout-backend[579098]: {"time":"2025-08-30T08:32:51.829Z","severity":"error","message":"Task #PID<0.185764.0> started from #PID<0.185760.0> terminating\n** (ArgumentError) cannot load `0` as type #Ecto.Enum<values: [:solidity, :vyper, :yul, :geas]> for field :language in %Explorer.Chain.SmartContract{__meta__: #Ecto.Schema.Metadata<:loaded, \"smart_contracts\">, id: nil, name: nil, compiler_version: nil, optimization: nil, contract_source_code: nil, constructor_arguments: nil, evm_version: nil, external_libraries: [], abi: nil, verified_via_sourcify: nil, verified_via_eth_bytecode_db: nil, verified_via_verifier_alliance: nil, partially_verified: nil, file_path: nil, is_vyper_contract: nil, is_changed_bytecode: false, bytecode_checked_at: ~U[2025-08-22 09:14:23.829266Z], contract_code_md5: nil, compiler_settings: nil, autodetect_constructor_args: nil, is_yul: nil, metadata_from_verified_bytecode_twin: nil, verified_bytecode_twin_address_hash: nil, license_type: :none, certified: nil, is_blueprint: nil, language: :solidity, address_hash: nil, address: #Ecto.Association.NotLoaded<association :address is not loaded>, smart_contract_additional_sources: #Ecto.Association.NotLoaded<association :smart_contract_additional_sources is not loaded>, inserted_at: nil, updated_at: nil, optimization_runs: nil}\n    (ecto 3.13.2) lib/ecto/repo/queryable.ex:440: Ecto.Repo.Queryable.struct_load!/6\n    (ecto 3.13.2) lib/ecto/repo/queryable.ex:255: anonymous fn/5 in Ecto.Repo.Queryable.preprocessor/3\n    (elixir 1.17.3) lib/enum.ex:1703: Enum.\"-map/2-lists^map/1-1-\"/2\n    (ecto 3.13.2) lib/ecto/repo/queryable.ex:246: Ecto.Repo.Queryable.execute/4\n    (ecto 3.13.2) lib/ecto/repo/queryable.ex:19: Ecto.Repo.Queryable.all/3\n    (ecto 3.13.2) lib/ecto/repo/preloader.ex:332: Ecto.Repo.Preloader.fetch_query/8\n    (elixir 1.17.3) lib/task/supervised.ex:101: Task.Supervised.invoke_mfa/2\n    (elixir 1.17.3) lib/task/supervised.ex:36: Task.Supervised.reply/4\nFunction: &:erlang.apply/2\n    Args: [#Function<10.92688859/1 in Ecto.Repo.Preloader.maybe_pmap/3>, [#Function<23.92688859/1 in Ecto.Repo.Preloader.prepare_queries/6>]]","metadata":{"error":{"initial_call":null,"reason":"** (ArgumentError) cannot load `0` as type #Ecto.Enum<values: [:solidity, :vyper, :yul, :geas]> for field :language in %Explorer.Chain.SmartContract{__meta__: #Ecto.Schema.Metadata<:loaded, \"smart_contracts\">, id: nil, name: nil, compiler_version: nil, optimization: nil, contract_source_code: nil, constructor_arguments: nil, evm_version: nil, external_libraries: [], abi: nil, verified_via_sourcify: nil, verified_via_eth_bytecode_db: nil, verified_via_verifier_alliance: nil, partially_verified: nil, file_path: nil, is_vyper_contract: nil, is_changed_bytecode: false, bytecode_checked_at: ~U[2025-08-22 09:14:23.829266Z], contract_code_md5: nil, compiler_settings: nil, autodetect_constructor_args: nil, is_yul: nil, metadata_from_verified_bytecode_twin: nil, verified_bytecode_twin_address_hash: nil, license_type: :none, certified: nil, is_blueprint: nil, language: :solidity, address_hash: nil, address: #Ecto.Association.NotLoaded<association :address is not loaded>, smart_contract_additional_sources: #Ecto.Association.NotLoaded<association :smart_contract_additional_sources is not loaded>, inserted_at: nil, updated_at: nil, optimization_runs: nil}\n    (ecto 3.13.2) lib/ecto/repo/queryable.ex:440: Ecto.Repo.Queryable.struct_load!/6\n    (ecto 3.13.2) lib/ecto/repo/queryable.ex:255: anonymous fn/5 in Ecto.Repo.Queryable.preprocessor/3\n    (elixir 1.17.3) lib/enum.ex:1703: Enum.\"-map/2-lists^map/1-1-\"/2\n    (ecto 3.13.2) lib/ecto/repo/queryable.ex:246: Ecto.Repo.Queryable.execute/4\n    (ecto 3.13.2) lib/ecto/repo/queryable.ex:19: Ecto.Repo.Queryable.all/3\n    (ecto 3.13.2) lib/ecto/repo/preloader.ex:332: Ecto.Repo.Preloader.fetch_query/8\n    (elixir 1.17.3) lib/task/supervised.ex:101: Task.Supervised.invoke_mfa/2\n    (elixir 1.17.3) lib/task/supervised.ex:36: Task.Supervised.reply/4\n"}}}
Aug 30 08:32:51 srv978203 blockscout-backend[579098]: {"time":"2025-08-30T08:32:51.830Z","severity":"error","message":"Ranch protocol #PID<0.185760.0> of listener BlockScoutWeb.Endpoint.HTTP (connection #PID<0.185759.0>, stream id 1) terminated\nan exception was raised:\n    ** (ArgumentError) cannot load `0` as type #Ecto.Enum<values: [:solidity, :vyper, :yul, :geas]> for field :language in %Explorer.Chain.SmartContract{__meta__: #Ecto.Schema.Metadata<:loaded, \"smart_contracts\">, id: nil, name: nil, compiler_version: nil, optimization: nil, contract_source_code: nil, constructor_arguments: nil, evm_version: nil, external_libraries: [], abi: nil, verified_via_sourcify: nil, verified_via_eth_bytecode_db: nil, verified_via_verifier_alliance: nil, partially_verified: nil, file_path: nil, is_vyper_contract: nil, is_changed_bytecode: false, bytecode_checked_at: ~U[2025-08-22 09:14:23.829266Z], contract_code_md5: nil, compiler_settings: nil, autodetect_constructor_args: nil, is_yul: nil, metadata_from_verified_bytecode_twin: nil, verified_bytecode_twin_address_hash: nil, license_type: :none, certified: nil, is_blueprint: nil, language: :solidity, address_hash: nil, address: #Ecto.Association.NotLoaded<association :address is not loaded>, smart_contract_additional_sources: #Ecto.Association.NotLoaded<association :smart_contract_additional_sources is not loaded>, inserted_at: nil, updated_at: nil, optimization_runs: nil}\n        (ecto 3.13.2) lib/ecto/repo/queryable.ex:440: Ecto.Repo.Queryable.struct_load!/6\n        (ecto 3.13.2) lib/ecto/repo/queryable.ex:255: anonymous fn/5 in Ecto.Repo.Queryable.preprocessor/3\n        (elixir 1.17.3) lib/enum.ex:1703: Enum.\"-map/2-lists^map/1-1-\"/2\n        (ecto 3.13.2) lib/ecto/repo/queryable.ex:246: Ecto.Repo.Queryable.execute/4\n        (ecto 3.13.2) lib/ecto/repo/queryable.ex:19: Ecto.Repo.Queryable.all/3\n        (ecto 3.13.2) lib/ecto/repo/preloader.ex:332: Ecto.Repo.Preloader.fetch_query/8\n        (elixir 1.17.3) lib/task/supervised.ex:101: Task.Supervised.invoke_mfa/2\n        (elixir 1.17.3) lib/task/supervised.ex:36: Task.Supervised.reply/4","metadata":{"error":{"initial_call":null,"reason":"** (ArgumentError) cannot load `0` as type #Ecto.Enum<values: [:solidity, :vyper, :yul, :geas]> for field :language in %Explorer.Chain.SmartContract{__meta__: #Ecto.Schema.Metadata<:loaded, \"smart_contracts\">, id: nil, name: nil, compiler_version: nil, optimization: nil, contract_source_code: nil, constructor_arguments: nil, evm_version: nil, external_libraries: [], abi: nil, verified_via_sourcify: nil, verified_via_eth_bytecode_db: nil, verified_via_verifier_alliance: nil, partially_verified: nil, file_path: nil, is_vyper_contract: nil, is_changed_bytecode: false, bytecode_checked_at: ~U[2025-08-22 09:14:23.829266Z], contract_code_md5: nil, compiler_settings: nil, autodetect_constructor_args: nil, is_yul: nil, metadata_from_verified_bytecode_twin: nil, verified_bytecode_twin_address_hash: nil, license_type: :none, certified: nil, is_blueprint: nil, language: :solidity, address_hash: nil, address: #Ecto.Association.NotLoaded<association :address is not loaded>, smart_contract_additional_sources: #Ecto.Association.NotLoaded<association :smart_contract_additional_sources is not loaded>, inserted_at: nil, updated_at: nil, optimization_runs: nil}\n    (ecto 3.13.2) lib/ecto/repo/queryable.ex:440: Ecto.Repo.Queryable.struct_load!/6\n    (ecto 3.13.2) lib/ecto/repo/queryable.ex:255: anonymous fn/5 in Ecto.Repo.Queryable.preprocessor/3\n    (elixir 1.17.3) lib/enum.ex:1703: Enum.\"-map/2-lists^map/1-1-\"/2\n    (ecto 3.13.2) lib/ecto/repo/queryable.ex:246: Ecto.Repo.Queryable.execute/4\n    (ecto 3.13.2) lib/ecto/repo/queryable.ex:19: Ecto.Repo.Queryable.all/3\n    (ecto 3.13.2) lib/ecto/repo/preloader.ex:332: Ecto.Repo.Preloader.fetch_query/8\n    (elixir 1.17.3) lib/task/supervised.ex:101: Task.Supervised.invoke_mfa/2\n    (elixir 1.17.3) lib/task/supervised.ex:36: Task.Supervised.reply/4\n"}}}
Aug 30 08:32:52 srv978203 blockscout-backend[579098]: {"time":"2025-08-30T08:32:52.784Z","severity":"info","message":"Start sanitizing of empty blocks. Batch size is 10","metadata":{"fetcher":"empty_blocks_to_refetch"}}
Aug 30 08:32:54 srv978203 blockscout-backend[579098]: {"time":"2025-08-30T08:32:54.069Z","severity":"info","message":"Index already caught up.","metadata":{"fetcher":"block_catchup","first_block_number":null,"last_block_number":null,"missing_block_count":0,"shrunk":false}}
Aug 30 08:32:54 srv978203 blockscout-backend[579098]: {"time":"2025-08-30T08:32:54.070Z","severity":"info","message":"Checking if index needs to catch up in 10000ms.","metadata":{"fetcher":"block_catchup"}}
Aug 30 08:32:57 srv978203 blockscout-backend[579098]: {"time":"2025-08-30T08:32:57.519Z","severity":"info","message":"Deleted 0 event notifications","metadata":{}}
Aug 30 08:33:02 srv978203 blockscout-backend[579098]: {"time":"2025-08-30T08:33:02.809Z","severity":"info","message":"Start sanitizing of empty blocks. Batch size is 10","metadata":{"fetcher":"empty_blocks_to_refetch"}}
Aug 30 08:33:04 srv978203 blockscout-backend[579098]: {"time":"2025-08-30T08:33:04.072Z","severity":"info","message":"Index already caught up.","metadata":{"fetcher":"block_catchup","first_block_number":null,"last_block_number":null,"missing_block_count":0,"shrunk":false}}
Aug 30 08:33:04 srv978203 blockscout-backend[579098]: {"time":"2025-08-30T08:33:04.072Z","severity":"info","message":"Checking if index needs to catch up in 10000ms.","metadata":{"fetcher":"block_catchup"}}
Aug 30 08:33:12 srv978203 blockscout-backend[579098]: {"time":"2025-08-30T08:33:12.856Z","severity":"info","message":"Start sanitizing of empty blocks. Batch size is 10","metadata":{"fetcher":"empty_blocks_to_refetch"}}
Aug 30 08:33:14 srv978203 blockscout-backend[579098]: {"time":"2025-08-30T08:33:14.074Z","severity":"info","message":"Index already caught up.","metadata":{"fetcher":"block_catchup","first_block_number":null,"last_block_number":null,"missing_block_count":0,"shrunk":false}}
Aug 30 08:33:14 srv978203 blockscout-backend[579098]: {"time":"2025-08-30T08:33:14.074Z","severity":"info","message":"Checking if index needs to catch up in 10000ms.","metadata":{"fetcher":"block_catchup"}}
Aug 30 08:33:22 srv978203 blockscout-backend[579098]: {"time":"2025-08-30T08:33:22.880Z","severity":"info","message":"Start sanitizing of empty blocks. Batch size is 10","metadata":{"fetcher":"empty_blocks_to_refetch"}}
Aug 30 08:33:24 srv978203 blockscout-backend[579098]: {"time":"2025-08-30T08:33:24.077Z","severity":"info","message":"Index already caught up.","metadata":{"fetcher":"block_catchup","first_block_number":null,"last_block_number":null,"missing_block_count":0,"shrunk":false}}
Aug 30 08:33:24 srv978203 blockscout-backend[579098]: {"time":"2025-08-30T08:33:24.077Z","severity":"info","message":"Checking if index needs to catch up in 10000ms.","metadata":{"fetcher":"block_catchup"}}
Aug 30 08:33:32 srv978203 blockscout-backend[579098]: {"time":"2025-08-30T08:33:32.908Z","severity":"info","message":"Start sanitizing of empty blocks. Batch size is 10","metadata":{"fetcher":"empty_blocks_to_refetch"}}
Aug 30 08:33:34 srv978203 blockscout-backend[579098]: {"time":"2025-08-30T08:33:34.081Z","severity":"info","message":"Index already caught up.","metadata":{"fetcher":"block_catchup","first_block_number":null,"last_block_number":null,"missing_block_count":0,"shrunk":false}}
Aug 30 08:33:34 srv978203 blockscout-backend[579098]: {"time":"2025-08-30T08:33:34.081Z","severity":"info","message":"Checking if index needs to catch up in 10000ms.","metadata":{"fetcher":"block_catchup"}}
Aug 30 08:33:42 srv978203 blockscout-backend[579098]: {"time":"2025-08-30T08:33:42.933Z","severity":"info","message":"Start sanitizing of empty blocks. Batch size is 10","metadata":{"fetcher":"empty_blocks_to_refetch"}}
Aug 30 08:33:44 srv978203 blockscout-backend[579098]: {"time":"2025-08-30T08:33:44.083Z","severity":"info","message":"Index already caught up.","metadata":{"fetcher":"block_catchup","first_block_number":null,"last_block_number":null,"missing_block_count":0,"shrunk":false}}
Aug 30 08:33:44 srv978203 blockscout-backend[579098]: {"time":"2025-08-30T08:33:44.084Z","severity":"info","message":"Checking if index needs to catch up in 10000ms.","metadata":{"fetcher":"block_catchup"}}
Aug 30 08:33:51 srv978203 blockscout-backend[579098]: {"time":"2025-08-30T08:33:51.844Z","severity":"error","message":"Task #PID<0.191931.0> started from #PID<0.191927.0> terminating\n** (ArgumentError) cannot load `0` as type #Ecto.Enum<values: [:solidity, :vyper, :yul, :geas]> for field :language in %Explorer.Chain.SmartContract{__meta__: #Ecto.Schema.Metadata<:loaded, \"smart_contracts\">, id: nil, name: nil, compiler_version: nil, optimization: nil, contract_source_code: nil, constructor_arguments: nil, evm_version: nil, external_libraries: [], abi: nil, verified_via_sourcify: nil, verified_via_eth_bytecode_db: nil, verified_via_verifier_alliance: nil, partially_verified: nil, file_path: nil, is_vyper_contract: nil, is_changed_bytecode: false, bytecode_checked_at: ~U[2025-08-22 09:14:23.829266Z], contract_code_md5: nil, compiler_settings: nil, autodetect_constructor_args: nil, is_yul: nil, metadata_from_verified_bytecode_twin: nil, verified_bytecode_twin_address_hash: nil, license_type: :none, certified: nil, is_blueprint: nil, language: :solidity, address_hash: nil, address: #Ecto.Association.NotLoaded<association :address is not loaded>, smart_contract_additional_sources: #Ecto.Association.NotLoaded<association :smart_contract_additional_sources is not loaded>, inserted_at: nil, updated_at: nil, optimization_runs: nil}\n    (ecto 3.13.2) lib/ecto/repo/queryable.ex:440: Ecto.Repo.Queryable.struct_load!/6\n    (ecto 3.13.2) lib/ecto/repo/queryable.ex:255: anonymous fn/5 in Ecto.Repo.Queryable.preprocessor/3\n    (elixir 1.17.3) lib/enum.ex:1703: Enum.\"-map/2-lists^map/1-1-\"/2\n    (ecto 3.13.2) lib/ecto/repo/queryable.ex:246: Ecto.Repo.Queryable.execute/4\n    (ecto 3.13.2) lib/ecto/repo/queryable.ex:19: Ecto.Repo.Queryable.all/3\n    (ecto 3.13.2) lib/ecto/repo/preloader.ex:332: Ecto.Repo.Preloader.fetch_query/8\n    (elixir 1.17.3) lib/task/supervised.ex:101: Task.Supervised.invoke_mfa/2\n    (elixir 1.17.3) lib/task/supervised.ex:36: Task.Supervised.reply/4\nFunction: &:erlang.apply/2\n    Args: [#Function<10.92688859/1 in Ecto.Repo.Preloader.maybe_pmap/3>, [#Function<23.92688859/1 in Ecto.Repo.Preloader.prepare_queries/6>]]","metadata":{"error":{"initial_call":null,"reason":"** (ArgumentError) cannot load `0` as type #Ecto.Enum<values: [:solidity, :vyper, :yul, :geas]> for field :language in %Explorer.Chain.SmartContract{__meta__: #Ecto.Schema.Metadata<:loaded, \"smart_contracts\">, id: nil, name: nil, compiler_version: nil, optimization: nil, contract_source_code: nil, constructor_arguments: nil, evm_version: nil, external_libraries: [], abi: nil, verified_via_sourcify: nil, verified_via_eth_bytecode_db: nil, verified_via_verifier_alliance: nil, partially_verified: nil, file_path: nil, is_vyper_contract: nil, is_changed_bytecode: false, bytecode_checked_at: ~U[2025-08-22 09:14:23.829266Z], contract_code_md5: nil, compiler_settings: nil, autodetect_constructor_args: nil, is_yul: nil, metadata_from_verified_bytecode_twin: nil, verified_bytecode_twin_address_hash: nil, license_type: :none, certified: nil, is_blueprint: nil, language: :solidity, address_hash: nil, address: #Ecto.Association.NotLoaded<association :address is not loaded>, smart_contract_additional_sources: #Ecto.Association.NotLoaded<association :smart_contract_additional_sources is not loaded>, inserted_at: nil, updated_at: nil, optimization_runs: nil}\n    (ecto 3.13.2) lib/ecto/repo/queryable.ex:440: Ecto.Repo.Queryable.struct_load!/6\n    (ecto 3.13.2) lib/ecto/repo/queryable.ex:255: anonymous fn/5 in Ecto.Repo.Queryable.preprocessor/3\n    (elixir 1.17.3) lib/enum.ex:1703: Enum.\"-map/2-lists^map/1-1-\"/2\n    (ecto 3.13.2) lib/ecto/repo/queryable.ex:246: Ecto.Repo.Queryable.execute/4\n    (ecto 3.13.2) lib/ecto/repo/queryable.ex:19: Ecto.Repo.Queryable.all/3\n    (ecto 3.13.2) lib/ecto/repo/preloader.ex:332: Ecto.Repo.Preloader.fetch_query/8\n    (elixir 1.17.3) lib/task/supervised.ex:101: Task.Supervised.invoke_mfa/2\n    (elixir 1.17.3) lib/task/supervised.ex:36: Task.Supervised.reply/4\n"}}}
Aug 30 08:33:51 srv978203 blockscout-backend[579098]: {"time":"2025-08-30T08:33:51.845Z","severity":"error","message":"Ranch protocol #PID<0.191927.0> of listener BlockScoutWeb.Endpoint.HTTP (connection #PID<0.191926.0>, stream id 1) terminated\nan exception was raised:\n    ** (ArgumentError) cannot load `0` as type #Ecto.Enum<values: [:solidity, :vyper, :yul, :geas]> for field :language in %Explorer.Chain.SmartContract{__meta__: #Ecto.Schema.Metadata<:loaded, \"smart_contracts\">, id: nil, name: nil, compiler_version: nil, optimization: nil, contract_source_code: nil, constructor_arguments: nil, evm_version: nil, external_libraries: [], abi: nil, verified_via_sourcify: nil, verified_via_eth_bytecode_db: nil, verified_via_verifier_alliance: nil, partially_verified: nil, file_path: nil, is_vyper_contract: nil, is_changed_bytecode: false, bytecode_checked_at: ~U[2025-08-22 09:14:23.829266Z], contract_code_md5: nil, compiler_settings: nil, autodetect_constructor_args: nil, is_yul: nil, metadata_from_verified_bytecode_twin: nil, verified_bytecode_twin_address_hash: nil, license_type: :none, certified: nil, is_blueprint: nil, language: :solidity, address_hash: nil, address: #Ecto.Association.NotLoaded<association :address is not loaded>, smart_contract_additional_sources: #Ecto.Association.NotLoaded<association :smart_contract_additional_sources is not loaded>, inserted_at: nil, updated_at: nil, optimization_runs: nil}\n        (ecto 3.13.2) lib/ecto/repo/queryable.ex:440: Ecto.Repo.Queryable.struct_load!/6\n        (ecto 3.13.2) lib/ecto/repo/queryable.ex:255: anonymous fn/5 in Ecto.Repo.Queryable.preprocessor/3\n        (elixir 1.17.3) lib/enum.ex:1703: Enum.\"-map/2-lists^map/1-1-\"/2\n        (ecto 3.13.2) lib/ecto/repo/queryable.ex:246: Ecto.Repo.Queryable.execute/4\n        (ecto 3.13.2) lib/ecto/repo/queryable.ex:19: Ecto.Repo.Queryable.all/3\n        (ecto 3.13.2) lib/ecto/repo/preloader.ex:332: Ecto.Repo.Preloader.fetch_query/8\n        (elixir 1.17.3) lib/task/supervised.ex:101: Task.Supervised.invoke_mfa/2\n        (elixir 1.17.3) lib/task/supervised.ex:36: Task.Supervised.reply/4","metadata":{"error":{"initial_call":null,"reason":"** (ArgumentError) cannot load `0` as type #Ecto.Enum<values: [:solidity, :vyper, :yul, :geas]> for field :language in %Explorer.Chain.SmartContract{__meta__: #Ecto.Schema.Metadata<:loaded, \"smart_contracts\">, id: nil, name: nil, compiler_version: nil, optimization: nil, contract_source_code: nil, constructor_arguments: nil, evm_version: nil, external_libraries: [], abi: nil, verified_via_sourcify: nil, verified_via_eth_bytecode_db: nil, verified_via_verifier_alliance: nil, partially_verified: nil, file_path: nil, is_vyper_contract: nil, is_changed_bytecode: false, bytecode_checked_at: ~U[2025-08-22 09:14:23.829266Z], contract_code_md5: nil, compiler_settings: nil, autodetect_constructor_args: nil, is_yul: nil, metadata_from_verified_bytecode_twin: nil, verified_bytecode_twin_address_hash: nil, license_type: :none, certified: nil, is_blueprint: nil, language: :solidity, address_hash: nil, address: #Ecto.Association.NotLoaded<association :address is not loaded>, smart_contract_additional_sources: #Ecto.Association.NotLoaded<association :smart_contract_additional_sources is not loaded>, inserted_at: nil, updated_at: nil, optimization_runs: nil}\n    (ecto 3.13.2) lib/ecto/repo/queryable.ex:440: Ecto.Repo.Queryable.struct_load!/6\n    (ecto 3.13.2) lib/ecto/repo/queryable.ex:255: anonymous fn/5 in Ecto.Repo.Queryable.preprocessor/3\n    (elixir 1.17.3) lib/enum.ex:1703: Enum.\"-map/2-lists^map/1-1-\"/2\n    (ecto 3.13.2) lib/ecto/repo/queryable.ex:246: Ecto.Repo.Queryable.execute/4\n    (ecto 3.13.2) lib/ecto/repo/queryable.ex:19: Ecto.Repo.Queryable.all/3\n    (ecto 3.13.2) lib/ecto/repo/preloader.ex:332: Ecto.Repo.Preloader.fetch_query/8\n    (elixir 1.17.3) lib/task/supervised.ex:101: Task.Supervised.invoke_mfa/2\n    (elixir 1.17.3) lib/task/supervised.ex:36: Task.Supervised.reply/4\n"}}}
Aug 30 08:33:52 srv978203 blockscout-backend[579098]: {"time":"2025-08-30T08:33:52.955Z","severity":"info","message":"Start sanitizing of empty blocks. Batch size is 10","metadata":{"fetcher":"empty_blocks_to_refetch"}}
Aug 30 08:33:54 srv978203 blockscout-backend[579098]: {"time":"2025-08-30T08:33:54.087Z","severity":"info","message":"Index already caught up.","metadata":{"fetcher":"block_catchup","first_block_number":null,"last_block_number":null,"missing_block_count":0,"shrunk":false}}
Aug 30 08:33:54 srv978203 blockscout-backend[579098]: {"time":"2025-08-30T08:33:54.087Z","severity":"info","message":"Checking if index needs to catch up in 10000ms.","metadata":{"fetcher":"block_catchup"}}
Aug 30 08:34:02 srv978203 blockscout-backend[579098]: {"time":"2025-08-30T08:34:02.983Z","severity":"info","message":"Start sanitizing of empty blocks. Batch size is 10","metadata":{"fetcher":"empty_blocks_to_refetch"}}
Aug 30 08:34:04 srv978203 blockscout-backend[579098]: {"time":"2025-08-30T08:34:04.090Z","severity":"info","message":"Index already caught up.","metadata":{"fetcher":"block_catchup","first_block_number":null,"last_block_number":null,"missing_block_count":0,"shrunk":false}}
Aug 30 08:34:04 srv978203 blockscout-backend[579098]: {"time":"2025-08-30T08:34:04.090Z","severity":"info","message":"Checking if index needs to catch up in 10000ms.","metadata":{"fetcher":"block_catchup"}}
Aug 30 08:34:13 srv978203 blockscout-backend[579098]: {"time":"2025-08-30T08:34:13.009Z","severity":"info","message":"Start sanitizing of empty blocks. Batch size is 10","metadata":{"fetcher":"empty_blocks_to_refetch"}}
Aug 30 08:34:14 srv978203 blockscout-backend[579098]: {"time":"2025-08-30T08:34:14.092Z","severity":"info","message":"Index already caught up.","metadata":{"fetcher":"block_catchup","first_block_number":null,"last_block_number":null,"missing_block_count":0,"shrunk":false}}
Aug 30 08:34:14 srv978203 blockscout-backend[579098]: {"time":"2025-08-30T08:34:14.093Z","severity":"info","message":"Checking if index needs to catch up in 10000ms.","metadata":{"fetcher":"block_catchup"}}
